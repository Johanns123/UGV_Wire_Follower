import matplotlib.pyplot as plt

# Dados
dados = [
    (0, 0, 0, 0), (0, 0, 0, 0), (0, 0, 0, 0), (0, 0, 0, 0), (8.0, 480.0, 472, 0.06528),
    (7.0, 480.0, 473, 0.05712), (6.0, 480.0, 474, 0.04896), (6.0, 480.0, 474, 0.04896),
    (2.0, 480.0, 478, 0.01632), (-3.0, 480.0, 483, -0.02448), (-10.0, 480.0, 490, -0.0816),
    (-12.0, 480.0, 492, -0.09792), (-12.0, 480.0, 492, -0.09792), (-12.0, 480.0, 492, -0.09792),
    (-13.0, 480.0, 493, -0.10608), (-11.0, 480.0, 491, -0.08976), (-9.0, 480.0, 489, -0.07344),
    (-7.0, 480.0, 487, -0.05712), (-5.0, 480.0, 485, -0.0408), (-3.0, 480.0, 483, -0.02448),
    (-3.0, 480.0, 483, -0.02448), (-1.0, 480.0, 481, -0.00816), (0.0, 480.0, 480, 0.0),
    (4.0, 480.0, 476, 0.03264), (2.0, 480.0, 478, 0.01632), (3.0, 480.0, 477, 0.02448),
    (4.0, 480.0, 476, 0.03264), (5.0, 480.0, 475, 0.0408), (5.0, 480.0, 475, 0.0408),
    (3.0, 480.0, 477, 0.02448), (2.0, 480.0, 478, 0.01632), (2.0, 480.0, 478, 0.01632),
    (0.0, 480.0, 480, 0.0), (0.0, 480.0, 480, 0.0), (2.0, 480.0, 478, 0.01632),
    (2.0, 480.0, 478, 0.01632), (3.0, 480.0, 477, 0.02448), (1.0, 480.0, 479, 0.00816),
    (2.0, 480.0, 478, 0.01632), (4.0, 480.0, 476, 0.03264), (2.0, 480.0, 478, 0.01632),
    (1.0, 480.0, 479, 0.00816), (-2.0, 480.0, 482, -0.01632), (-4.0, 480.0, 484, -0.03264),
    (-4.0, 480.0, 484, -0.03264), (-4.0, 480.0, 484, -0.03264), (-4.0, 480.0, 484, -0.03264),
    (-2.0, 480.0, 482, -0.01632), (-2.0, 480.0, 482, -0.01632), (-2.0, 480.0, 482, -0.01632),
    (-1.0, 480.0, 481, -0.00816), (1.0, 480.0, 479, 0.00816), (0.0, 480.0, 480, 0.0),
    (0.0, 480.0, 480, 0.0), (2.0, 480.0, 478, 0.01632), (1.0, 480.0, 479, 0.00816),
    (1.0, 480.0, 479, 0.00816), (1.0, 480.0, 479, 0.00816), (1.0, 480.0, 479, 0.00816),
    (1.0, 480.0, 479, 0.00816), (0.0, 480.0, 480, 0.0), (1.0, 480.0, 479, 0.00816),
    (1.0, 480.0, 479, 0.00816), (0.0, 480.0, 480, 0.0), (-1.0, 480.0, 481, -0.00816),
    (-2.0, 480.0, 482, -0.01632), (-1.0, 480.0, 481, -0.00816), (0.0, 480.0, 480, 0.0),
    (-1.0, 480.0, 481, -0.00816), (1.0, 480.0, 479, 0.00816), (1.0, 480.0, 479, 0.00816),
    (1.0, 480.0, 479, 0.00816), (0.0, 480.0, 480, 0.0), (0.0, 480.0, 480, 0.0),
    (1.0, 480.0, 479, 0.00816), (0.0, 480.0, 480, 0.0)
]

# Separando os valores
erro, setpoint, PV, ang_vel = zip(*dados)

# Plotando o gráfico
plt.figure(figsize=(10, 6))
plt.plot(erro, label='Error', marker='o', markersize = 8)
plt.plot(setpoint, label='Setpoint', marker='s', markersize = 8)
plt.plot(PV, label='PV', marker='x', markersize=8)
# plt.plot(ang_vel, label='Velocidade Angular', marker='d')

# Configurações do gráfico
plt.title('Error, Setpoint, PV', fontsize=18)
plt.xlabel('Samples', fontsize=18)
plt.ylabel('Values', fontsize=18)
plt.legend(fontsize=18)
plt.grid(True)


# plt.title("Real track X Ideal Path", fontsize=14)
# plt.plot(x_coords, y_coords, label='Real Track', marker='o', markersize=8, linestyle='-')
# plt.plot(ref_points_x, ref_points_y, color='red', label='Refrence Track', linewidth=3)
# plt.scatter(square_coords_x, square_coords_y, color='green', label='Solar Panels', marker='s', s=200)  # Adiciona quadrados
# plt.xlabel('X', fontsize=14)
# plt.ylabel('Y', fontsize=14)
# Aumentando o tamanho das fontes dos dados no eixo X e Y
plt.gca().tick_params(axis='x', labelsize=18)  # Eixo X
plt.gca().tick_params(axis='y', labelsize=18)  # Eixo Y
# Exibindo o gráfico
plt.show()
